<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0068)http://www-kasm.nii.ac.jp/~koide/SWCLOS2/Manual/RDFParserWriter.html -->
<html><head><title>RDF/XML Parser and Writer</title>
<meta http-equiv="Content-Type" content="text/html"/>
<meta http-equiv="Content-Style-Type" content="text/css"/>
<style type="text/css">
p.justify {
	TEXT-ALIGN: justify
}
body {
	FONT-SIZE: 10pt; BACKGROUND: white; MARGIN-LEFT: 5%; COLOR: black; MARGIN-RIGHT: 5%; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; TEXT-ALIGN: justify
}
table {
	BORDER-RIGHT: 1px; BORDER-TOP: 1px; FONT-SIZE: 10pt; BORDER-LEFT: 1px; BORDER-BOTTOM: 1px; FONT-FAMILY: Verdana, Arial, sans-serif; BORDER-COLLAPSE: collapse; cellspacing: 0; cellpadding: 0
}
td {
	BORDER-TOP-WIDTH: 1px; PADDING-RIGHT: 5px; PADDING-LEFT: 5px; BORDER-LEFT-WIDTH: 0px; BORDER-LEFT-COLOR: #808080; BORDER-BOTTOM-WIDTH: 1px; BORDER-BOTTOM-COLOR: #808080; PADDING-BOTTOM: 5px; VERTICAL-ALIGN: middle; BORDER-TOP-COLOR: #808080; PADDING-TOP: 5px; BORDER-COLLAPSE: collapse; TEXT-ALIGN: left; BORDER-RIGHT-WIDTH: 0px; BORDER-RIGHT-COLOR: #808080; empty-cells: show
}
th {
	BORDER-TOP-WIDTH: 1px; PADDING-RIGHT: 5px; PADDING-LEFT: 5px; BORDER-LEFT-WIDTH: 0px; BORDER-LEFT-COLOR: #808080; BORDER-BOTTOM-WIDTH: 1px; BORDER-BOTTOM-COLOR: #808080; PADDING-BOTTOM: 5px; VERTICAL-ALIGN: middle; BORDER-TOP-COLOR: #808080; PADDING-TOP: 5px; BORDER-COLLAPSE: collapse; TEXT-ALIGN: center; BORDER-RIGHT-WIDTH: 0px; BORDER-RIGHT-COLOR: #808080; empty-cells: show
}
.noindent {
	MARGIN-LEFT: -5%; MARGIN-RIGHT: -5%
}
.moreindent {
	MARGIN-LEFT: 5%; MARGIN-RIGHT: 5%
}
.box {
	BORDER-RIGHT: 1px solid; PADDING-RIGHT: 10px; BORDER-TOP: 1px solid; PADDING-LEFT: 10px; PADDING-BOTTOM: 10px; BORDER-LEFT: 1px solid; PADDING-TOP: 10px; BORDER-BOTTOM: 1px solid; BACKGROUND-COLOR: #f0f0f0; page-break-inside: avoid
}
h1.title {
	FONT-WEIGHT: bold; FONT-SIZE: 160%
}
h1 {
	FONT-WEIGHT: bold; FONT-SIZE: 130%
}
h2 {
	FONT-WEIGHT: bold; FONT-SIZE: 105%
}
h3 {
	FONT-WEIGHT: bold; FONT-SIZE: 100%
}
h4 {
	FONT-SIZE: 100%; FONT-STYLE: italic
}
h5 {
	
}
ul {
	LIST-STYLE-TYPE: disc
}
dt {
	FONT-WEIGHT: bold
}
a:link {
	COLOR: rgb(0,0,255)
}
a:hover {
	COLOR: rgb(255,0,0)
}
pre {
	MARGIN-TOP: 1px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 1px; FONT-FAMILY: monospace
}
div.defname {
	FONT-WEIGHT: bold; FLOAT: left; TEXT-ALIGN: left
}
div.deftype {
	TEXT-ALIGN: right
}
div.titlebar {
	PADDING-RIGHT: 0.1em; PADDING-LEFT: 0.1em; PADDING-BOTTOM: 0.1em; PADDING-TOP: 0.1em; BACKGROUND-COLOR: #f0f0f0
}
div.defdescribe {
	MARGIN: 1px 0px 10px 80px; TEXT-ALIGN: justify
}
/* Reference style by Seiji */
.refhead { FONT-WEIGHT: bold }
.refbody { MARGIN-LEFT: 10px }
</style>

<meta content="MSHTML 6.00.2900.6003" name="GENERATOR"/></head>
<body>
<h2>10. &nbsp;RDF/XML Parser and Writer </h2>
<p>So far, only S-expression is used to represent RDF ontology. It is convenient 
for lisp programmers to handle pieces of knowledge in RDF. However, SWCLOS, of 
course, allows users to read RDF/XML format files and print out SWCLOS contents 
in RDF/XML format. </p>
<h3>10.1 &nbsp;RDF/XML Parser</h3>
<p><b>parse-rdf</b> is a parser for RDF/XML format files. It is useful to check 
RDF/XML syntax, but it does not interpret anything in semantics. In the 
following example, you might misunderstand that <b>parse-rdf</b> just prints out 
an RDF/XML format file, but it is not a reality. <b>parse-rdf</b> produces a 
list of XML element of lisp structure from RDF/XML file, namely <a 
href="http://www.w3.org/TR/2004/REC-xml11-20040204/#NT-XMLDecl">XMLDecl</a>, <a 
href="http://www.w3.org/TR/2004/REC-xml11-20040204/#dt-doctype">doctypedecl</a>, 
<a 
href="http://www.w3.org/TR/2004/REC-xml11-20040204/#sec-comments">Comment</a>, 
and <a href="http://www.w3.org/TR/rdf-syntax-grammar/#RDF">RDFdecl</a> element 
as lisp structure. In Common Lisp, the print form of lisp structure is 
programmable. So, the structure print function of XMLDecl is programmed so as to 
print out a XMLDecl form in XML, the print function of doctypedecl structure is 
to &ldquo;:doctypedecl ...&rdquo;, a Comment structure to a Comment form, and an RDFdecl 
structure to an RDFdecl form. In short, <b>parse-rdf</b> reads RDF/XML format 
file, parses RDF/XML format, makes structures, and returns them in a list. Then, 
you see RDF/XML-like forms of such structures in the list. </p>
<p>If you want to handle just RDF data without the interpretation of RDFS and 
OWL from RDF/XML format files, <b>parse-rdf</b> is available to do so. However, 
in order to interpret contents in RDF/XML files, you may use 
<b>read-rdf-file</b> with an accepter function, which is usually 
<b>addRdfXml</b>. See the followings. </p>
<code>gx-user(2): 
(with-open-file (p "RDFS/JenaEx.rdf") (parse-rdf p))<br/>(&lt;?xml version="1.0" 
?&gt; #&lt;doctypedecl ... &gt; <br/>&lt;rdf:RDF 
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:somewhere="http://somewhere/"&gt;<br/>&nbsp;&nbsp;&lt;rdf:Description 
rdf:about="http://somewhere/JohnSmith"&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:FN&gt;John 
Smith&lt;/vCard:FN&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:N&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;rdf:Description&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:Family&gt;Smith&lt;/vCard:Family&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:Given&gt;John&lt;/vCard:Given&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/rdf:Description&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/vCard:N&gt;<br/>&nbsp;&nbsp;&lt;/rdf:Description&gt;<br/>&lt;/rdf:RDF&gt;)<br/>gx-user(3): 
(read-rdf-file #'addRdfXml "RDFS/JenaEx.rdf")<br/>Warning: Entail by rdf1: 
vCard:FN rdf:type rdf:Property.<br/>Warning: Entail by rdf1: vCard:N rdf:type 
rdf:Property.<br/>Warning: Entail by rdf1: vCard:Family rdf:type 
rdf:Property.<br/>Warning: Entail by rdf1: vCard:Given rdf:type 
rdf:Property.<br/>:done<br/>gx-user(4): 
somewhere:JohnSmith<br/>#&lt;|rdfs:Resource| 
somewhere:JohnSmith&gt;<br/></code>
<p><a id="SWCLOSparse-rdf" name="SWCLOSparse-rdf"/>
<div class="titlebar">
<div class="defname">parse-rdf <i>stream</i></div>
<div class="deftype">[Function]</div></div>
<div class="defdescribe">parses RDF/XML from <i>stream</i> and makes the internal 
  representation of RDF. This function returns a list of several XML structures. 
  Note that <b>*base-uri*</b> and <b>*default-namespace*</b> in the environment 
  are updated through content from <i>stream</i>. </div></p>
<p><a id="SWCLOSread-rdf-file" name="SWCLOSread-rdf-file"/>
<div class="titlebar">
<div class="defname">read-rdf-file <i>accepter-fun</i> [ <i>file</i> [ <i>code</i> 
]]</div>
<div class="deftype">[Function]</div></div>
<div class="defdescribe">This function reads and parses a <i>file</i> that contains RDF/XML 
  format data, then passes attributes in RDFdecl, parsed XMLDecl, parsed 
  doctypedecl, parsed Comments, and parsed Descriptions to <i>accepter-fun</i>. 
  The <i>code</i> is a character code of <i>file</i>, of which the default is 
  utf-8. If file has its encoding description in XMLDecl, the direction in file 
  supersedes the <i>code</i>. </div></p>
<p><a id="SWCLOSaddRdfXml" name="SWCLOSaddRdfXml"/>
<div class="titlebar">
<div class="defname">addRdfXml <i>description</i></div>
<div class="deftype">[Function]</div></div>
<div class="defdescribe">This function accepts an instance of lisp structure Description, 
  which may be generated from the RDF parser, and transform it to S-expression 
  form, then interprets the form by <b>addForm</b>. This function returns the 
  result of <b>addForm</b>. </div></p>
<h3>10.2 &nbsp;RDF/XML Writer</h3>
<p>To print out RDF data in RDF/XML format, the function <b>write-xml</b> is 
available. See the following example.</p><code>gx-user(5): 
(write-xml somewhere:JohnSmith)<br/>&lt;rdf:RDF 
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:somewhere="http://somewhere/"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:vCard="http://www.w3.org/2001/vcard-rdf/3.0#" 
&gt;<br/>&nbsp;&nbsp;&lt;rdf:Description rdf:about="http://somewhere/JohnSmith" 
&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:FN&gt;John 
Smith&lt;/vCard:FN&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:N&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;rdf:Description&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:Family&gt;Smith&lt;/vCard:Family&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;vCard:Given&gt;John&lt;/vCard:Given&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/rdf:Description&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/vCard:N&gt;<br/>&nbsp;&nbsp;&lt;/rdf:Description&gt;<br/>&lt;/rdf:RDF&gt;<br/></code>
<p><a id="SWCLOSwrite-xml" name="SWCLOSwrite-xml"/>
<div class="titlebar">
<div class="defname">write-xml <i>x</i> [ <i>stream</i> ]</div>
<div class="deftype">[Function]</div></div>
<div class="defdescribe">This function accepts a resource object or a list of resource 
  objects, and print out them in RDF/XML format. Note that this function returns 
  no value. If <i>stream</i> is not supplied, *standard-output* is used as 
  default. </div></p>
<hr/>
<i><small>Author: <a href="mailto:SeijiKoide@aol.com">Seiji Koide</a>. Copyright 
(c) 2005, 2006 GALAXY EXPRESS CORPORATION. Feb. 2006 <br/>Copyright (c) 2007, 
2010 Seiji Koide. Oct.2010 <br/></small></i></body></html>
